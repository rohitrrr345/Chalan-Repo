 for all pending challans   /pending-challans
 for online pending challans   /online-offline-pending-fines
 for total pending fines   /total-pending-fines-sum
 for highest challan lowest challan   /higest-challan-lowest-challan
 for topstates with most challans   /topstates-with-most-challans
 for peak violation months   /peak-violation-months
 for drivers by challan top 5   /drivers-by-challan-top-5
 for average challan per truck   /average-challan-per-truck
 for challans by state city   /challans-by-state-city
 for challans by month   /challans-by-month
 for pending duration analysis   /pending-duration-analysis
 for repeat offenders   /repeat-offenders   
 for challans by vehicle   /challans-by-vehicle/:rc_number
 for pending challan percentage   /challan-pending-percentage


 app.get("/challans-by-vehicle/:rc_number", async (req, res) => {
    try {
        const { rc_number } = req.params;

        if (!rc_number) {
            return res.status(400).json({
                success: false,
                message: "Vehicle registration number (rc_number) is required."
            });
        }

        // Fetch all challans for the given vehicle registration number
        const challans = await prisma.challan.findMany({
            where: { rc_number },
            select: {
                challan_number: true,
                accused_name: true,
                offense_details: true,
                challan_date: true,
                amount: true,
                challan_status: true
            },
            orderBy: { challan_date: "desc" } // Sort by latest first
        });

        res.json({
            success: true,
            data: challans
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: "Error fetching challans by vehicle registration number",
            error
        });
    }
});
